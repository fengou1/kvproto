// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: recovermetapb.proto

package recover_meta

import (
	"context"
	"fmt"
	"io"
	"math"
	math_bits "math/bits"

	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReadRegionMetaRequest struct {
	StoreId              uint64   `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRegionMetaRequest) Reset()         { *m = ReadRegionMetaRequest{} }
func (m *ReadRegionMetaRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRegionMetaRequest) ProtoMessage()    {}
func (*ReadRegionMetaRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fe084accbb5d0ef, []int{0}
}
func (m *ReadRegionMetaRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ReadRegionMetaRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ReadRegionMetaRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ReadRegionMetaRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRegionMetaRequest.Merge(m, src)
}
func (m *ReadRegionMetaRequest) XXX_Size() int {
	return m.Size()
}
func (m *ReadRegionMetaRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRegionMetaRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRegionMetaRequest proto.InternalMessageInfo

func (m *ReadRegionMetaRequest) GetStoreId() uint64 {
	if m != nil {
		return m.StoreId
	}
	return 0
}

type RegionMeta struct {
	RegionId             uint64   `protobuf:"varint,1,opt,name=region_id,json=regionId,proto3" json:"region_id,omitempty"`
	LastLogTerm          uint64   `protobuf:"varint,2,opt,name=last_log_term,json=lastLogTerm,proto3" json:"last_log_term,omitempty"`
	LastIndex            uint64   `protobuf:"varint,3,opt,name=last_index,json=lastIndex,proto3" json:"last_index,omitempty"`
	CommitIndex          uint64   `protobuf:"varint,4,opt,name=commit_index,json=commitIndex,proto3" json:"commit_index,omitempty"`
	Version              uint64   `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	Tombstone            bool     `protobuf:"varint,6,opt,name=tombstone,proto3" json:"tombstone,omitempty"`
	StartKey             []byte   `protobuf:"bytes,7,opt,name=start_key,json=startKey,proto3" json:"start_key,omitempty"`
	EndKey               []byte   `protobuf:"bytes,8,opt,name=end_key,json=endKey,proto3" json:"end_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegionMeta) Reset()         { *m = RegionMeta{} }
func (m *RegionMeta) String() string { return proto.CompactTextString(m) }
func (*RegionMeta) ProtoMessage()    {}
func (*RegionMeta) Descriptor() ([]byte, []int) {
	return fileDescriptor_4fe084accbb5d0ef, []int{1}
}
func (m *RegionMeta) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RegionMeta) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RegionMeta.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RegionMeta) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegionMeta.Merge(m, src)
}
func (m *RegionMeta) XXX_Size() int {
	return m.Size()
}
func (m *RegionMeta) XXX_DiscardUnknown() {
	xxx_messageInfo_RegionMeta.DiscardUnknown(m)
}

var xxx_messageInfo_RegionMeta proto.InternalMessageInfo

func (m *RegionMeta) GetRegionId() uint64 {
	if m != nil {
		return m.RegionId
	}
	return 0
}

func (m *RegionMeta) GetLastLogTerm() uint64 {
	if m != nil {
		return m.LastLogTerm
	}
	return 0
}

func (m *RegionMeta) GetLastIndex() uint64 {
	if m != nil {
		return m.LastIndex
	}
	return 0
}

func (m *RegionMeta) GetCommitIndex() uint64 {
	if m != nil {
		return m.CommitIndex
	}
	return 0
}

func (m *RegionMeta) GetVersion() uint64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *RegionMeta) GetTombstone() bool {
	if m != nil {
		return m.Tombstone
	}
	return false
}

func (m *RegionMeta) GetStartKey() []byte {
	if m != nil {
		return m.StartKey
	}
	return nil
}

func (m *RegionMeta) GetEndKey() []byte {
	if m != nil {
		return m.EndKey
	}
	return nil
}

func init() {
	proto.RegisterType((*ReadRegionMetaRequest)(nil), "recover_meta.ReadRegionMetaRequest")
	proto.RegisterType((*RegionMeta)(nil), "recover_meta.RegionMeta")
}

func init() { proto.RegisterFile("recovermetapb.proto", fileDescriptor_4fe084accbb5d0ef) }

var fileDescriptor_4fe084accbb5d0ef = []byte{
	// 334 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xc1, 0x4e, 0xf2, 0x40,
	0x10, 0xc7, 0xd9, 0xef, 0x43, 0x5a, 0x46, 0xd4, 0x64, 0xc5, 0xb8, 0xa2, 0x36, 0x58, 0x2f, 0x9c,
	0xd0, 0xe0, 0x1b, 0x78, 0x23, 0xe8, 0xa5, 0x7a, 0x6f, 0x0a, 0x3b, 0x69, 0x1a, 0x69, 0x07, 0x77,
	0x17, 0x22, 0x6f, 0xe2, 0x23, 0xf8, 0x28, 0x1e, 0x3d, 0x7a, 0x34, 0xf8, 0x1c, 0x26, 0xa6, 0xbb,
	0x10, 0xc4, 0x78, 0x9b, 0xf9, 0xfd, 0x7f, 0x6d, 0x26, 0xff, 0x85, 0x7d, 0x85, 0x23, 0x9a, 0xa1,
	0xca, 0xd1, 0x24, 0x93, 0x61, 0x77, 0xa2, 0xc8, 0x10, 0x6f, 0x2c, 0x61, 0x5c, 0xd2, 0x56, 0x33,
	0xa5, 0x94, 0x6c, 0x70, 0x51, 0x4e, 0xce, 0x69, 0xed, 0xa9, 0xa9, 0x36, 0x76, 0x74, 0x20, 0xec,
	0xc1, 0x41, 0x84, 0x89, 0x8c, 0x30, 0xcd, 0xa8, 0xb8, 0x45, 0x93, 0x44, 0xf8, 0x38, 0x45, 0x6d,
	0xf8, 0x11, 0xf8, 0xda, 0x90, 0xc2, 0x38, 0x93, 0x82, 0xb5, 0x59, 0xa7, 0x1a, 0x79, 0x76, 0xef,
	0xcb, 0xf0, 0x8b, 0x01, 0xac, 0x3f, 0xe0, 0xc7, 0x50, 0x57, 0x76, 0x5b, 0xab, 0xbe, 0x03, 0x7d,
	0xc9, 0x43, 0xd8, 0x19, 0x27, 0xda, 0xc4, 0x63, 0x4a, 0x63, 0x83, 0x2a, 0x17, 0xff, 0xac, 0xb0,
	0x5d, 0xc2, 0x1b, 0x4a, 0xef, 0x51, 0xe5, 0xfc, 0x14, 0xc0, 0x3a, 0x59, 0x21, 0xf1, 0x49, 0xfc,
	0xb7, 0x42, 0xbd, 0x24, 0xfd, 0x12, 0xf0, 0x33, 0x68, 0x8c, 0x28, 0xcf, 0xb3, 0x95, 0x50, 0x75,
	0x7f, 0x70, 0xcc, 0x29, 0x02, 0xbc, 0x19, 0x2a, 0x9d, 0x51, 0x21, 0xb6, 0xdc, 0xad, 0xcb, 0x95,
	0x9f, 0x40, 0xdd, 0x50, 0x3e, 0xd4, 0x86, 0x0a, 0x14, 0xb5, 0x36, 0xeb, 0xf8, 0xd1, 0x1a, 0x94,
	0xa7, 0x6b, 0x93, 0x28, 0x13, 0x3f, 0xe0, 0x5c, 0x78, 0x6d, 0xd6, 0x69, 0x44, 0xbe, 0x05, 0x03,
	0x9c, 0xf3, 0x43, 0xf0, 0xb0, 0x90, 0x36, 0xf2, 0x6d, 0x54, 0xc3, 0x42, 0x0e, 0x70, 0xde, 0x1b,
	0xc1, 0x46, 0xd5, 0xfc, 0x0e, 0x76, 0x37, 0x3b, 0xe4, 0xe7, 0xdd, 0x9f, 0x42, 0xf7, 0xcf, 0x86,
	0x5b, 0xe2, 0xb7, 0xb4, 0x12, 0xc2, 0xca, 0x25, 0xbb, 0x6e, 0xbe, 0xbf, 0xf8, 0xec, 0x75, 0x11,
	0xb0, 0xb7, 0x45, 0xc0, 0x3e, 0x16, 0x01, 0x7b, 0xfe, 0x0c, 0x2a, 0xc3, 0x9a, 0x7d, 0xb5, 0xab,
	0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf1, 0xfa, 0xf8, 0x4c, 0x01, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RecoverMetaClient is the client API for RecoverMeta service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RecoverMetaClient interface {
	// scan region meta to ready region meta
	ReadRegionMeta(ctx context.Context, in *ReadRegionMetaRequest, opts ...grpc.CallOption) (RecoverMeta_ReadRegionMetaClient, error)
}

type recoverMetaClient struct {
	cc *grpc.ClientConn
}

func NewRecoverMetaClient(cc *grpc.ClientConn) RecoverMetaClient {
	return &recoverMetaClient{cc}
}

func (c *recoverMetaClient) ReadRegionMeta(ctx context.Context, in *ReadRegionMetaRequest, opts ...grpc.CallOption) (RecoverMeta_ReadRegionMetaClient, error) {
	stream, err := c.cc.NewStream(ctx, &_RecoverMeta_serviceDesc.Streams[0], "/recover_meta.recover_meta/ReadRegionMeta", opts...)
	if err != nil {
		return nil, err
	}
	x := &recoverMetaReadRegionMetaClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RecoverMeta_ReadRegionMetaClient interface {
	Recv() (*RegionMeta, error)
	grpc.ClientStream
}

type recoverMetaReadRegionMetaClient struct {
	grpc.ClientStream
}

func (x *recoverMetaReadRegionMetaClient) Recv() (*RegionMeta, error) {
	m := new(RegionMeta)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RecoverMetaServer is the server API for RecoverMeta service.
type RecoverMetaServer interface {
	// scan region meta to ready region meta
	ReadRegionMeta(*ReadRegionMetaRequest, RecoverMeta_ReadRegionMetaServer) error
}

// UnimplementedRecoverMetaServer can be embedded to have forward compatible implementations.
type UnimplementedRecoverMetaServer struct {
}

func (*UnimplementedRecoverMetaServer) ReadRegionMeta(req *ReadRegionMetaRequest, srv RecoverMeta_ReadRegionMetaServer) error {
	return status.Errorf(codes.Unimplemented, "method ReadRegionMeta not implemented")
}

func RegisterRecoverMetaServer(s *grpc.Server, srv RecoverMetaServer) {
	s.RegisterService(&_RecoverMeta_serviceDesc, srv)
}

func _RecoverMeta_ReadRegionMeta_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReadRegionMetaRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RecoverMetaServer).ReadRegionMeta(m, &recoverMetaReadRegionMetaServer{stream})
}

type RecoverMeta_ReadRegionMetaServer interface {
	Send(*RegionMeta) error
	grpc.ServerStream
}

type recoverMetaReadRegionMetaServer struct {
	grpc.ServerStream
}

func (x *recoverMetaReadRegionMetaServer) Send(m *RegionMeta) error {
	return x.ServerStream.SendMsg(m)
}

var _RecoverMeta_serviceDesc = grpc.ServiceDesc{
	ServiceName: "recover_meta.recover_meta",
	HandlerType: (*RecoverMetaServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ReadRegionMeta",
			Handler:       _RecoverMeta_ReadRegionMeta_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "recovermetapb.proto",
}

func (m *ReadRegionMetaRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ReadRegionMetaRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ReadRegionMetaRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.StoreId != 0 {
		i = encodeVarintRecovermetapb(dAtA, i, uint64(m.StoreId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *RegionMeta) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RegionMeta) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RegionMeta) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.EndKey) > 0 {
		i -= len(m.EndKey)
		copy(dAtA[i:], m.EndKey)
		i = encodeVarintRecovermetapb(dAtA, i, uint64(len(m.EndKey)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.StartKey) > 0 {
		i -= len(m.StartKey)
		copy(dAtA[i:], m.StartKey)
		i = encodeVarintRecovermetapb(dAtA, i, uint64(len(m.StartKey)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Tombstone {
		i--
		if m.Tombstone {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Version != 0 {
		i = encodeVarintRecovermetapb(dAtA, i, uint64(m.Version))
		i--
		dAtA[i] = 0x28
	}
	if m.CommitIndex != 0 {
		i = encodeVarintRecovermetapb(dAtA, i, uint64(m.CommitIndex))
		i--
		dAtA[i] = 0x20
	}
	if m.LastIndex != 0 {
		i = encodeVarintRecovermetapb(dAtA, i, uint64(m.LastIndex))
		i--
		dAtA[i] = 0x18
	}
	if m.LastLogTerm != 0 {
		i = encodeVarintRecovermetapb(dAtA, i, uint64(m.LastLogTerm))
		i--
		dAtA[i] = 0x10
	}
	if m.RegionId != 0 {
		i = encodeVarintRecovermetapb(dAtA, i, uint64(m.RegionId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintRecovermetapb(dAtA []byte, offset int, v uint64) int {
	offset -= sovRecovermetapb(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ReadRegionMetaRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StoreId != 0 {
		n += 1 + sovRecovermetapb(uint64(m.StoreId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *RegionMeta) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.RegionId != 0 {
		n += 1 + sovRecovermetapb(uint64(m.RegionId))
	}
	if m.LastLogTerm != 0 {
		n += 1 + sovRecovermetapb(uint64(m.LastLogTerm))
	}
	if m.LastIndex != 0 {
		n += 1 + sovRecovermetapb(uint64(m.LastIndex))
	}
	if m.CommitIndex != 0 {
		n += 1 + sovRecovermetapb(uint64(m.CommitIndex))
	}
	if m.Version != 0 {
		n += 1 + sovRecovermetapb(uint64(m.Version))
	}
	if m.Tombstone {
		n += 2
	}
	l = len(m.StartKey)
	if l > 0 {
		n += 1 + l + sovRecovermetapb(uint64(l))
	}
	l = len(m.EndKey)
	if l > 0 {
		n += 1 + l + sovRecovermetapb(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovRecovermetapb(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRecovermetapb(x uint64) (n int) {
	return sovRecovermetapb(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ReadRegionMetaRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRecovermetapb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ReadRegionMetaRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ReadRegionMetaRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoreId", wireType)
			}
			m.StoreId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovermetapb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StoreId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipRecovermetapb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRecovermetapb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RegionMeta) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRecovermetapb
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RegionMeta: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RegionMeta: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RegionId", wireType)
			}
			m.RegionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovermetapb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RegionId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastLogTerm", wireType)
			}
			m.LastLogTerm = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovermetapb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastLogTerm |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastIndex", wireType)
			}
			m.LastIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovermetapb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastIndex |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommitIndex", wireType)
			}
			m.CommitIndex = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovermetapb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommitIndex |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Version", wireType)
			}
			m.Version = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovermetapb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Version |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tombstone", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovermetapb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Tombstone = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovermetapb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRecovermetapb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovermetapb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartKey = append(m.StartKey[:0], dAtA[iNdEx:postIndex]...)
			if m.StartKey == nil {
				m.StartKey = []byte{}
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EndKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRecovermetapb
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthRecovermetapb
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthRecovermetapb
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EndKey = append(m.EndKey[:0], dAtA[iNdEx:postIndex]...)
			if m.EndKey == nil {
				m.EndKey = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRecovermetapb(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRecovermetapb
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRecovermetapb(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRecovermetapb
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRecovermetapb
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRecovermetapb
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRecovermetapb
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRecovermetapb
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRecovermetapb
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRecovermetapb        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRecovermetapb          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRecovermetapb = fmt.Errorf("proto: unexpected end of group")
)
