syntax = "proto3";
package recover_meta;

import "gogoproto/gogo.proto";
import "rustproto.proto";

option (gogoproto.sizer_all) = true;
option (gogoproto.marshaler_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (rustproto.lite_runtime_all) = true;

message ReadRegionMetaRequest {
    uint64 store_id = 1;
}

message RegionMeta {
    uint64 region_id = 1;
    uint64 last_log_term = 2;
    uint64 last_index = 3;
    uint64 commit_index = 4;
    uint64 term = 5;
    uint64 version = 6;
    bool tombstone = 7;
    bytes start_key = 8;
    bytes end_key = 9;
}

message RecoverCmdRequest {
    uint64 region_id = 1;
    uint64 term = 2; // set term
    bool as_leader = 3; // force region_id as leader
    bool tombstone = 4; // set Peer to tombstoned
    bool exit_recovery = 5; // set command to exit the recovery meta service
}

// ensure leader assign is OK
message RecoverCmdResponse {
    uint64 region_id = 1;
    bool Ok = 2;
}

service recover_meta {
    // scan region meta to ready region meta
    rpc ReadRegionMeta(ReadRegionMetaRequest) returns (stream RegionMeta) {}
    // execute the recovery command
    rpc RecoverCmd(stream RecoverCmdRequest) returns (RecoverCmdResponse) {}
}
